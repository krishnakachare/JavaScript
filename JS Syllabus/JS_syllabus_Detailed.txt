1.	What JavaScript is?
•	Applications of javascript: 
2.	First JavaScript script.
3.	Comments in JS
4.	Internal JS
5.	External JS File

6.	Variables:
    | ├── var
    | ├── let
    | └── const
    | const for object.

7.  Strict mode in js

8.	Variable Hoisting, TDZ
9.	variable scopes:
    | ├── Global scope
    | ├── Local scope
    | ├── Block scope

10.	Data types in JS:
    1. Primitive/immutable Data types(6):- 
        1. string 
        2. Boolean
        3. Undefined
        4. Null
        5. Number
        6. Bigint
        7. Symbol
        
    2. Non-Primitive/mutable data types:- 
        1. Object (E.g.Date,);
        2. Array
        3. Function  
        4. RegEx 

11.	| ├── window methods: String(), Number(), Maths methods
    | ├── Dialogue boxes : alert(),confirm(),prompt()

12.	Operators:
    | ├── Arithmetic
    | ├── Assignment
    | ├── Comparison
    | ├── Logical
    | ├── Unary
    | └── Ternary (Conditional)

13. Corecion

14.	Control Flow/Conditionals:
    | ├── if statement
    | ├── else statement
    | ├── else if statement
    | ├── switch statement(case, default)
    
15.	Loops
    | ├── for loop
    | ├── while loop
    | └── do-while loop
    | ├── for...in
    | └── for...of (Object methods)
    | break
    | continoue
    | return
    | Nested for loop ( Pattern print)

16.	Functions:
    | ├── Function declaration
    | ├── Function expression
    | ├── Arrow function
    | ├── IIFE (Immediately Invoked Function Expression)
    | ├── Higher order function
    | ├── Callback function
    | └── Constructor Function 
    | └── Generators function
    | └── Function Hoisting:
    | └── Closures (Lexical scope)
    | └── Default Parameters in function-ES6
    | └── 'this' In short 
    | └── function recursion (factorial, fibonacci)
    | └── Memoization

•	Pass by value, Pass by address/referance
•	value comparison, address comparison
•	value copy, address/referance copy
•	shallow copy, Deep copy
   
17.	String:
    - Intro and defination 
    - quotes
    - template literal
    - multiline string
    - Escape characters
    - Corecion
    - eval()
    - string iteration (loop)
    - string Methods:     

18.	Array:
    | ├── Into and defination
    | ├── Array properties
    | ├── Array methods   
    | ├── Array iteration (loop)
   
19.	Object:
     -Object ?     
      -Symbol
      -CURD operations
       C-ways of object create
          R-├── Dot notation
            └── Bracket notation
      -loop on object
    | ├── Object properties & Methods:
          prototype, __proto__, prototype chain
    | | └── inheritance(extend-super, prototype) 
    | ├── this keyword  
    | ├── Call , bind , apply 
    | ├── Getter, setter
    • Map
    • Set
19.	OOPS
   
31. JSON:
    |── JSON (JavaScript Object Notation)
    |── JSON.stringify(), JSON.parse()

21.	Date & Time

•	Destructuring
•	Object spread operator, REST Parameter

•	REGEX:

•	Promise:
    | ├── Promise states
    | | ├── Pending
    | | ├── Fulfilled
    | | └── Rejected
    | ├── Promise methods
    | | ├── then()
    | | ├── catch()
    | | └── finally()
    | └── Promise.all()

•	async await:
    |── Asynchronous JavaScript
    | ├── Callbacks
    | ├── Promises
    | └── Async/Await

25.	setInterval, SetTimeout
    |── Web APIs:
    | ├── Local Storage
    | ├── Session Storage
    | ├── Cookies
    | ├── Offline Storage
    | └── Web Storage API

•	Working with API:
|── Fetch API

x. DOM:
    |── DOM Manipulation:
    | ├── Selecting elements
    | ├── Modifying elements
    | └── Creating elements
    
    |── Events:
    | ├── Event listeners
    | ├── Event propagation
    | └── Event delegation
    •  Event Object
    •  Bubbling and Capturing

26.	BOM(Browser Object Model)

24. Node.js Specific Concepts
    •  require()
    •  Node.js Modules (module.exports)
    •  File System Module (fs)
    •  npm (Node Package Manager)

•	Read, wright file in js

32. Modules in js:
    |── Modules
    | ├── import
    | └── export
    •  Import and export Statements (ES6 Modules)
    •  CommonJS Modules (require, module.exports)

x. Left-hand-side expressions:
    •  Property accessors
    •  ?.
    •  new
    •  new .target
    •  import.meta
    •  super
    •  import()

***********************************************************
•	AJAX:
    |── AJAX (Asynchronous JavaScript and XML)

•	Debugging:
    | ├── Console.log()
    | ├── Breakpoints
    | └── DevTools
    |── ESLint    

•	Error Handling:
    | ├── try...catch statement
    | └── throw statement 

•	JavaScript Execution:
        -Execution context
        -callback queue
        -Event loop

25.Testing Frameworks
    •  Jasmine 
    •  Mocha
    •  Jest

===============================================================

# ES-6 Features (ES-2015) :
-----------------------------------------
1. const & let 
2. From IIFEs to blocks
3. concatenating strings to template literals
4. Multi-line strings
6. default parameter values
7. from arguments to rest parameters(...)
8. exponent operator (**)
9.  Desturcturing (array/object)
10. for-loop to for-in and for-of
11. arrow functions
12. From apply() to the spread operator (...)
13. Enhanced Object Literals
14. From constructors to classes
15. inheritance - class,extends
16. Modules
17. collection-Map,weakmap,Set,weakset
18. promise and async-await
19. generators
20. Tail Calls


  
|── Libraries and Frameworks
| ├── React
| ├── Angular
| └── Vue.js
|































