Q. Diff bt Property and method?
---------------------------------------------------------------
# String Property:
1. length : return string length  ( no.of characters)
   "Hi js".length // 5

---------------------------------------------------------------
# String Methods:
1. charAt(index): Returns the character at the specified index.
   let str = "Hello";
   str.charAt(1); // "e"

2. charCodeAt(index): Returns the Unicode of the character at the specified index.
   let str = "Hello";
   str.charCodeAt(1); // 101

3. codePointAt(index): Returns the Unicode code point of the character at the specified index.
   let str = "Hello";
   str.codePointAt(1); // 101

4. concat(...strings): Joins two or more strings and returns a new string.
   let str1 = "Hello";
   let str2 = "World";
   str1.concat(" ", str2); // "Hello World"

5. startsWith(searchString, position):The characters to be searched for at the start of the string

    let str = "Hello, world!";
    console.log(str.startsWith("world", 7));  // Output: true
    console.log(str.startsWith("world", 6));  // Output: false

5. endsWith(searchString, length): Checks if a string ends with a specified string/characters.
   let str = "Hello";
   str.endsWith("lo"); // true

6. includes(searchString, position): Checks if a string contains the specified string/characters.
   let str = "Hello";
   str.includes("ell"); // true

7. indexOf(searchValue, fromIndex): Returns the position of the first found occurrence of a specified value in a string.
   let str = "Hello";
   str.indexOf("e"); // 1

8. lastIndexOf(searchValue, fromIndex): Returns the position of the last found occurrence of a specified value in a string.
   let str = "Hello Hello";
   str.lastIndexOf("e"); // 7

9. localeCompare(compareString, locales, options): Compares two strings in the current locale.
   let str1 = "a";
   let str2 = "b";
   str1.localeCompare(str2); // -1

10. match(regexp): Retrieves the result of matching a string against a regular expression.
    let str = "Hello World";
    str.match(/World/); // ["World"]

11. matchAll(regexp): Returns an iterator of all results matching a string against a regular expression.
    let str = "Hello World";
    [...str.matchAll(/o/g)]; // [["o"], ["o"]]

12. normalize(form): Returns the Unicode Normalization Form of a given string.
    let str = "\u004F\u030C"; // "O" with caron
    str.normalize(); // "Ǒ"

13. padEnd(targetLength, padString): Pads the current string with another string (multiple times, if needed) until it reaches the given length.
    let str = "Hello";
    str.padEnd(10, "!"); // "Hello!!!!!"

14. padStart(targetLength, padString): Pads the current string from the start with another string (multiple times, if needed) until it reaches the given length.
    let str = "Hello";
    str.padStart(10, "!"); // "!!!!!Hello"

15. repeat(count): Returns a new string with a specified number of copies of the string it was called on.
    let str = "Hello";
    str.repeat(3); // "HelloHelloHello"

16. replace(searchValue, newValue): Replaces some or all matches of a pattern with a replacement.
    let str = "Hello World";
    str.replace("World", "Everyone"); // "Hello Everyone"

17. replaceAll(searchValue, newValue): Replaces all matches of a pattern with a replacement.
    let str = "Hello World World";
    str.replaceAll("World", "Everyone"); // "Hello Everyone Everyone"

18. search(regexp): Executes a search for a match between a regular expression and this string object.
    let str = "Hello World";
    str.search(/World/); // 6

19. slice(beginIndex, endIndex): will return piece of str from start(included) index to end(excluded) index
    let str = "Hello World";
    str.slice(0, 5); // "Hello"

20. split(separator, limit): Splits a string into an array of substrings.
    let str = "Hello World";
    str.split(" "); // ["Hello", "World"]

21. startsWith(searchString, position): Checks if a string starts with specified characters.
    let str = "Hello";
    str.startsWith("He"); // true

22. substring(indexStart, indexEnd): Returns the part of the string between the start and end indexes, or to the end of the string.
    let str = "Hello World";
    str.substring(0, 5); // "Hello"

23. toLowerCase(): Converts the entire string to lower case.
    let str = "Hello World";
    str.toLowerCase(); // "hello world"

24. toUpperCase(): Converts the entire string to upper case.
    let str = "Hello World";
    str.toUpperCase(); // "HELLO WORLD"

25. toLocaleLowerCase(): The characters within a string are converted to lower case while respecting the current locale.
    let str = "İstanbul";
    str.toLocaleLowerCase('tr-TR'); // "istanbul"

26. toLocaleUpperCase(): The characters within a string are converted to upper case while respecting the current locale.
    let str = "istanbul";
    str.toLocaleUpperCase('tr-TR'); // "İSTANBUL"

27. trim(): Removes whitespace from both ends of a string.
    let str = "   Hello World   ";
    str.trim(); // "Hello World"

28. trimStart() / trimLeft(): Removes whitespace from the start of a string.
    let str = "   Hello World   ";
    str.trimStart(); // "Hello World   "

29. trimEnd() / trimRight(): Removes whitespace from the end of a string.
    let str = "   Hello World   ";
    str.trimEnd(); // "   Hello World"

30. valueOf(): Returns the primitive value of a String object.
    let str = new String("Hello World");
    str.valueOf(); // "Hello World"

31. str.substr(start) or str.substr(start,length):
---> will return from start to end of string or from start to length
    "prasad".substr(1)---> rasad
    "prasad".substr(1,3)---> ras

32. array.join('delimiter')---> joins the array of values based on delimiter and return string
    ["pra","sad"].join(' ')---> "pra sad"    

    let array = ["Hello", "world", "!"];

        let result = array.join();
        console.log(result);  // Output: "Hello,world,!"
        result = array.join(" ");
        console.log(result);  // Output: "Hello world !"
        result = array.join("-");
        console.log(result);  // Output: "Hello-world-!"

    let array = ["H", "e", "l", "l", "o"];

        let result = array.join("");
        console.log(result);  // Output: "Hello"
