### eval(string):  from Window Object
    The `eval()` function in JavaScript is not specifically a string method, but it can be used to execute JavaScript code represented as a string.
    It can execute a string of JavaScript code and return the result.

**Example:
    let x = 10; let y = 20;
    let result = eval("x + y");  // 30

### Important Considerations:
    Security Risks: Using `eval()` can make your code vulnerable to injection attacks. Avoid using `eval()` with user-generated content.
    Performance: Code executed with `eval()` runs in the same scope as the call to `eval()`, which can lead to performance issues and debugging difficulties.
    Alternatives: There are often better alternatives to `eval()`, such as `JSON.parse()` for parsing JSON strings or `Function()` constructor for creating new functions from strings in a more controlled manner.

### Example with Alternatives:
1. Using `JSON.parse()` Instead of `eval()`:
    let jsonString = '{"name": "John", "age": 30}';
    let user = JSON.parse(jsonString);
    console.log(user.name); // "John"

2. Using `Function()` Constructor Instead of `eval()`:
    let func = new Function('a', 'b', 'return a + b');
    console.log(func(10, 20)); // 30


