# Modules in JavaScript :

-JavaScript modules allow you to break up your code into separate files.
-This makes it easier to maintain a code-base.
-make code more organized and manageable.

==========================================================================
# Module Systems:- 4 Types module systems available.

--------------------------------------------------------------------------
    1. CommonJS Module System CommonJS (CJS):- (module.export , require())  
      
    -CommonJS is a module system adopted by Node.js and used on the server-side. 
    -CJS allows for the import and export of modules using require and module.exports. 
    -This enables modules to be loaded synchronously and provides a simple syntax.

    *Example: Libraries and frameworks like Express.js prefer CommonJS.

--------------------------------------------------------------------------
    2. ECMAScript Module (ESM):-    (export , import)     
    -ESM is considered the official module system of JavaScript and is natively supported in modern browsers. 
    -ESM allows for the import and export of modules using import and export keywords. 
    -This provides more opportunities for optimizations such as static analysis and tree shaking. 
    -Additionally, ESM offers asynchronous module loading support.

    *Example: Frameworks like Vue.js prefer ESM.
  
---------------------------------------------------------------------------
    3. Asynchronous Module Definition (AMD):-
    -AMD is a module system designed for browser-based applications. 
    -It provides asynchronous module loading support, which improves the performance of applications running in the browser. 
    -AMD allows modules to be defined and imported using define and require functions.

    *Example: Libraries like RequireJS prefer AMD.

---------------------------------------------------------------------------
    4. Universal Module Definition (UMD):-
    -UMD provides a universal structure that supports both CommonJS and AMD module systems. -This allows modules to work in different environments. 
    -UMD is suitable for applications running both in browsers and on the server-side.

    *Example: Libraries like Lodash prefer UMD.
   
===============================================================================================
https://playwright.dev/docs/library0
https://docs.cypress.io/guides/references/configuration
https://docs.cypress.io/api/cypress-api/require
https://docs.cypress.io/guides/references/bundled-libraries
